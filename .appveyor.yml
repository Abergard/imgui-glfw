skip_tags: true

version: '1.0.{build}'

image:
  - Visual Studio 2019

build:
  verbosity: detailed

environment:
  matrix:
    - c_compiler: clang-cl
      cxx_compiler: clang-cl

    - c_compiler: cl
      cxx_compiler: cl

platform:
  - x86
  - x64

configuration:
  - Debug
  - Release

cache:
  - c:\projects\deps -> .appveyor.yml
  - c:\tools\vcpkg\installed\

install:
  - set NINJA_URL="https://github.com/ninja-build/ninja/releases/download/v1.8.2/ninja-win.zip"
  - set DEPS_DIR=C:\projects\deps

  - if not exist %DEPS_DIR% (
      mkdir %DEPS_DIR% &&
      cd %DEPS_DIR% &&
      appveyor DownloadFile %NINJA_URL% -FileName ninja.zip &&
      7z x ninja.zip -o%DEPS_DIR%\ninja > nul )

  - set NINJA_BIN=%DEPS_DIR%\ninja
  - set PATH=%NINJA_BIN%;%PATH%

  - ninja --version
  - clang-cl -v
  - cd C:\Tools\vcpkg
  - git pull
  - cd %APPVEYOR_BUILD_FOLDER%
  - vcpkg install glad:x86-windows glad:x64-windows glfw3:x86-windows glfw3:x64-windows imgui:x86-windows imgui:x64-windows

before_build:
  - call "C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Auxiliary\Build\vcvars64.bat"
  - cd %APPVEYOR_BUILD_FOLDER%
  - git submodule init
  - git submodule update

build_script:
  - nproc
  - mkdir build
  - cd build
  - cmake .. -GNinja -DCMAKE_BUILD_TYPE=%CONFIGURATION%
                     -DCMAKE_CXX_COMPILER=%CXX_COMPILER%
                     -DCMAKE_C_COMPILER=%C_COMPILER%
                     -DBUILD_EXAMPLES=ON
                     -DCMAKE_TOOLCHAIN_FILE=c:/tools/vcpkg/scripts/buildsystems/vcpkg.cmake

  - cmake --build . --config %CONFIGURATION% -j 2

test_script:
  - cmake --build . --target install

on_failure:
- ps: Push-AppveyorArtifact C:\Tools\vcpkg\buildtrees\imgui\build-x86-windows-rel-out.log
- ps: Push-AppveyorArtifact C:\Tools\vcpkg\buildtrees\imgui\build-x64-windows-rel-out.log
- ps: Push-AppveyorArtifact C:\Tools\vcpkg\buildtrees\imgui\build-x86-windows-deb-out.log
- ps: Push-AppveyorArtifact C:\Tools\vcpkg\buildtrees\imgui\build-x64-windows-deb-out.log

matrix:
  fast_finish: true